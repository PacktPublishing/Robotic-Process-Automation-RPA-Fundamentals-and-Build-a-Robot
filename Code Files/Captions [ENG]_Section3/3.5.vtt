WEBVTT

0
00:00.420 --> 00:04.700
Get to know the UiPath Studio user interface - part 2.

1
00:06.270 --> 00:14.010
OK, so let us open UiPath Studio, create a blank project and get to know the UiPath Studio user interface

2
00:14.010 --> 00:15.720
for automating projects.

3
00:17.550 --> 00:24.330
When you've opened your UiPath Studio application, go to start and create a blank process.

4
00:26.010 --> 00:29.250
Once I click here it will ask us for a project name,

5
00:29.250 --> 00:36.360
and as you might remember, my name is Tor, so let us call it "A tour with Tor" and click create.

6
00:39.800 --> 00:40.670
And here we are.

7
00:40.880 --> 00:43.610
This is the place where the magic happens.

8
00:45.250 --> 00:48.130
I will now take you through the different panels you see here,

9
00:48.140 --> 00:54.080
the point being you have a high level understanding of the interface to make it easier for you to explore

10
00:54.080 --> 00:55.160
it on your own later.

11
00:55.310 --> 01:01.160
OK, so on the left side, you see "the products, activities and snippets" panel.

12
01:01.400 --> 01:04.850
In the middle, you find what we call "the designer panel".

13
01:05.180 --> 01:08.820
And on the right hand side you have "the properties panel".

14
01:09.380 --> 01:12.080
In addition, we have "the ribbon" at the top.

15
01:12.920 --> 01:19.250
And before we go further, please go to the very left of the ribbon and click new, and choose sequence.

16
01:20.180 --> 01:22.970
Sequences are the smallest type of projects.

17
01:22.970 --> 01:28.780
They are suitable to linear processes as they enable you to go from one activity to another seamlessly.

18
01:29.870 --> 01:36.040
And we now see that a sequence was added to the designer panel. And as the sequence was added,

19
01:36.050 --> 01:43.280
the last important high level element of the user interface was revealed, namely "the control bar" at

20
01:43.280 --> 01:44.380
the bottom of the screen.

21
01:45.950 --> 01:49.490
So let us have a look at every component in a little more detail,

22
01:49.490 --> 01:55.960
starting with the designer panel. The designer panel displays your current automation project,

23
01:55.970 --> 02:01.160
it enables you to make changes to your project and provides quick access to variables, arguments and

24
02:01.160 --> 02:01.820
imports.

25
02:02.420 --> 02:08.060
Your current automation project will be shown here as a workflow, which is a graphical representation

26
02:08.210 --> 02:09.830
of the automation project.

27
02:10.190 --> 02:15.350
And the workflow is made up of different activities, such as clicking buttons, scraping data, making

28
02:15.350 --> 02:16.910
calculations and so on.

29
02:17.660 --> 02:22.700
I guess you still remember those RPA capabilities that we discussed in an earlier lesson.

30
02:23.060 --> 02:27.860
Anyway, it is here in the designer panel that we will build our robot.

31
02:29.880 --> 02:36.570
On the left side, we have the project, activities and snippets panel. Starting with the "project tab",

32
02:36.600 --> 02:42.750
that is what enables you to view the contents of your current project, ad folders, open file location

33
02:42.750 --> 02:44.580
and manage project dependencies.

34
02:45.210 --> 02:50.250
The project tab is simply an overview of your automation project.

35
02:50.250 --> 02:53.970
Usually, an automation project contains many different files and components.

36
02:54.210 --> 02:59.400
And this is where we have full control and overview of every project file and automation.

37
03:00.180 --> 03:04.980
Once you start automating processes on your own, you will quickly understand that breaking the process

38
03:04.980 --> 03:10.890
down to many single steps and building code in separate UiPath files makes total sense.

39
03:12.710 --> 03:19.520
Continuing with the "activities tab". The activities panel, show available activities that can be added

40
03:19.520 --> 03:24.010
to the current project and provides a search box for quick access.

41
03:24.500 --> 03:26.710
So we have three types of activities.

42
03:26.720 --> 03:34.700
We have general activities, system specific activities and technology specific activities.

43
03:34.700 --> 03:37.490
General activities or activities such as click.

44
03:37.760 --> 03:44.510
So if I search for click, you can see that we have, for example, an activity called mouse click.

45
03:44.510 --> 03:50.360
If a drag-and-drop the activity to our sequence in the designer panel, you will see that I can indicate

46
03:50.360 --> 03:58.640
on screen where I want UiPath to click. And now I will just delete this activity by marking it and clicking

47
03:58.640 --> 04:03.020
delete. Another general activity is typing.

48
04:03.230 --> 04:09.500
So if I search for "type" you can see, for example, "type into". That is an activity where you can type

49
04:09.500 --> 04:16.430
into any form or any search field, as a human would do using a keyboard when entering data on a website

50
04:16.430 --> 04:17.600
or in Google.

51
04:18.320 --> 04:21.350
So there are a lot of general activities like this.

52
04:22.370 --> 04:24.740
Then we have system specific activities.

53
04:24.740 --> 04:31.040
So if I search here for Excel, which is one example, you'll see that a lot of activities will pop-up

54
04:31.040 --> 04:31.820
on screen.

55
04:32.450 --> 04:38.670
These are activities that we can use together with Microsoft Excel; append range, close the workbook,

56
04:38.750 --> 04:44.240
copy a sheet, delete a range, get a cell color, get a selected range, read a cell, read a cell formula,

57
04:44.240 --> 04:46.190
and so on.

58
04:47.600 --> 04:50.360
Another example is Microsoft Outlook.

59
04:50.360 --> 04:55.700
So if I search for Outlook, you'll see here that there are several activities connected to Microsoft

60
04:55.700 --> 04:56.330
Outlook;

61
04:56.690 --> 05:01.310
get outlook mail message, move outlook mail message, send outlook mail message, and so on.

62
05:03.570 --> 05:08.650
The third activity type is activities connected with specific technologies.

63
05:08.670 --> 05:15.180
An example here could be, for instance, OCR technology, which stands for optical character recognition.

64
05:15.750 --> 05:18.510
And let us just check out the different options.

65
05:19.530 --> 05:24.390
So when I search for "OCR", you will see there are something called "engines".

66
05:24.390 --> 05:27.680
And here we have different OCR technology providers.

67
05:28.080 --> 05:31.380
We have Google, Microsoft, Tesseract and UiPath.

68
05:32.190 --> 05:38.700
So that is an example of a technology type of activity to be used for recognizing text on formats such

69
05:38.700 --> 05:43.320
as PDF or in virtual desktop environments such as Citrix.

70
05:45.690 --> 05:52.680
Lastly, in the project, activities and snippets panel, we have "the snippets". And the snippets panel enable

71
05:52.690 --> 05:55.050
you to easily reuse automations.

72
05:55.350 --> 05:59.040
It includes by default multiple samples and snippets.

73
05:59.700 --> 06:04.250
So snippets are components that are reusable for more than one automation project.

74
06:04.500 --> 06:11.430
If we, for example, go to "snippets" and to "loops" and open this, we can have a look at "for each file

75
06:11.430 --> 06:16.790
in folder" and drag-and-drop this to our sequence in the designer panel.

76
06:17.670 --> 06:18.980
You will see it opens.

77
06:18.990 --> 06:21.990
And here we need to select a folder.

78
06:22.230 --> 06:25.080
We need to assign each file in the folder to a list.

79
06:25.080 --> 06:28.980
And for each file on this list, we have the option to do something.

80
06:29.670 --> 06:35.760
And the benefit of this snippet is that the activities are already put together and the logic in place.

81
06:36.120 --> 06:41.520
And you basically do not have to figure out on your own how to put together activities to perform automation

82
06:41.520 --> 06:43.860
on all files in a specific folder.

83
06:45.450 --> 06:50.610
OK, so we will delete this to by marking the container and pressing the delete button.

84
06:52.610 --> 06:59.270
It is extremely powerful to reuse components in UiPath, and it may save developers a lot of work.

85
06:59.630 --> 07:06.170
UiPath actually have their own marketplace, www.marketplace.uipath.com, that is offering immediate

86
07:06.170 --> 07:12.530
access to an extensive set of RPA building blocks that developers and UiPath partners can share and

87
07:12.530 --> 07:18.470
use to accelerate their automation projects. UiPath Marketplace is like an app store for automation,

88
07:18.470 --> 07:21.350
and most of the content that can be found here is free.

89
07:21.500 --> 07:23.950
I really, really recommend you to check out this site.

90
07:23.960 --> 07:29.380
You can even find complete robots here that can help you reduce mundane tasks in minutes.

91
07:29.390 --> 07:30.050
Seriously.

92
07:30.470 --> 07:34.190
And more content is added to this site every single day.

93
07:37.410 --> 07:43.170
On the very right side of the interface, we have "the properties panel". Properties are used to adjust

94
07:43.170 --> 07:45.300
and configure different activities behavior.

95
07:45.420 --> 07:48.530
This is where you tweak the activities to suit your needs.

96
07:49.200 --> 07:53.850
Some properties are common for all activities and some are activities specific.

97
07:54.420 --> 08:00.960
I will just go back to the activities panel and search for an activity to open a browser. Searching for

98
08:00.960 --> 08:01.920
"open browser",

99
08:01.920 --> 08:07.470
you will see there already is an activity to open browser and I will drag-and-drop it to our sequence

100
08:07.470 --> 08:08.640
in the designer panel,

101
08:08.910 --> 08:13.670
click it - and you will see that something now happened in the properties panel.

102
08:14.850 --> 08:21.960
So let us look at, for instance, "input" and "browser type". Clicking the dropdown,

103
08:21.960 --> 08:24.690
you can see we may choose what browser to use.

104
08:24.840 --> 08:31.470
I will set it to IE (or Internet Explorer), but you may also choose any other browser, for example,

105
08:31.470 --> 08:33.930
Firefox, Chrome or Edge.

106
08:33.930 --> 08:36.840
Choosing another browser will require you to install a browser extension.

107
08:38.430 --> 08:42.350
Looking at options, we can choose the browser session to be hidden.

108
08:42.360 --> 08:47.220
We could choose the browser session to open a new session, which is set by default now.

109
08:47.490 --> 08:51.360
Or we could choose to have a private or incognito session.

110
08:52.050 --> 08:57.420
So these are some of the examples of properties that are connected to the open browser activity.

111
08:58.020 --> 09:03.120
As mentioned, every activity has their own set of properties, which some are common for all activities

112
09:03.120 --> 09:05.400
and others are activity specific.

113
09:06.780 --> 09:13.940
Again, let's delete this activity so that the designer panel is clean and only containing our sequence.

114
09:14.370 --> 09:16.680
And now let's have a look at "the ribbon".

115
09:17.700 --> 09:21.250
The ribbon is straightforward and consists of three tabs.

116
09:21.600 --> 09:25.770
First, we have the "home" tab, and that is what we went through in the last lesson.

117
09:26.250 --> 09:28.130
And then we have the "design" tab.

118
09:29.250 --> 09:33.710
This is where you can add sequences, flowcharts and state machines to your project.

119
09:34.200 --> 09:36.820
It is where you can install and manage packages.

120
09:37.350 --> 09:43.140
Here are some recording activities that may help you automate your processes and you'll find the screen

121
09:43.140 --> 09:45.090
scraping and data scraping wizard.

122
09:45.090 --> 09:52.110
You have the opportunity to open the UI Explorer to help you find selectors, you can use the remove unused

123
09:52.230 --> 09:58.020
function, to remove unused workflows, variables, arguments and so on - to make it easier to keep a

124
09:58.020 --> 10:00.720
clean product without redundant data and files.

125
10:01.290 --> 10:06.810
There is also a handy tool for analysing your files to ensure there are no errors in your project folder

126
10:07.230 --> 10:14.430
and you may export the workflow to Excel, or publish it directly to Orchestrator if that is what you use

127
10:14.440 --> 10:16.920
to schedule, control and monitor your processes.

128
10:18.420 --> 10:20.160
The last tab is "debug".

129
10:20.580 --> 10:25.530
That is where you validate and run your workflow while you use debugging tools to set breakpoints,

130
10:25.530 --> 10:28.560
monitor the activities execution step by step.

131
10:28.950 --> 10:34.470
And for instance, you may use the "slow step" function, which is a very nice feature to slow down the

132
10:34.470 --> 10:38.970
debugging process and have full control of what your robot is doing.

133
10:40.050 --> 10:46.290
You also have the option here to open logs, to view details regarding process execution and any changes

134
10:46.290 --> 10:47.520
made to the project.

135
10:49.930 --> 10:57.550
So that was the ribbon, and lastly, we have "the control bar" at the bottom. It has variables, arguments

136
10:57.550 --> 10:58.420
and imports.

137
10:58.810 --> 11:04.630
And this is where you can create variables, delete variables, deal with arguments, import files and

138
11:04.630 --> 11:05.160
so on.

139
11:05.650 --> 11:07.930
We will not go into detail on this right now.

140
11:07.930 --> 11:14.680
But you should know that variables in UiPath are used to store multiple types of data and all the variables

141
11:14.680 --> 11:18.270
from the .NET framework are available in UiPath.

142
11:19.660 --> 11:20.580
OK, fine.

143
11:20.590 --> 11:26.470
Now we have a high level understanding of the user interface and the different panels that are here.

144
11:26.890 --> 11:32.410
And all you have to do to build a process is simply to drag-and-drop activities to the designer panel

145
11:32.560 --> 11:35.320
and configure them so that they do what you want.

146
11:36.670 --> 11:40.630
Let us create a simple automation that will greet you with your name.

147
11:40.780 --> 11:43.560
For example; "David, you're awesome!

148
11:43.930 --> 11:45.310
Welcome to UiPath"

149
11:46.780 --> 11:53.370
What we want to do is to go over to activities, search for "input dialog" and double-click it.

150
11:54.310 --> 12:00.700
And now we need to configure the activity. In the dialogue title we will write "What is your name?",

151
12:01.390 --> 12:02.890
using quotation marks.

152
12:03.160 --> 12:07.960
Whenever we work with text in UiPath, we use quotation marks on each side of the text.

153
12:09.340 --> 12:14.170
In the "input label" box, we will write; "Please write your name".

154
12:15.940 --> 12:21.940
So this is our input dialog. Now, we need to go over to properties because when we're asked to write

155
12:21.940 --> 12:27.760
our name, we will write our name and the name we write will need to be stored in a variable.

156
12:28.510 --> 12:32.430
And that is what we will put in "result".

157
12:32.470 --> 12:38.650
Here we will actually need to create the variable and we can do so by pressing CTRL+K on our keyboard so

158
12:38.650 --> 12:42.700
that the "set name" opens and we will name our variable "name".

159
12:43.690 --> 12:45.870
Once you have written "name", press enter.

160
12:46.630 --> 12:52.030
If you now check out the control bar and variables tab, you will see that at a variable named "name" was

161
12:52.030 --> 12:58.290
created as a string type variable that is used for text. And the scope is our sequence,

162
12:58.300 --> 13:00.100
so everything's perfect!

163
13:01.790 --> 13:08.900
The next activity we want is a message box, so let's search for "message box" and double-click it and

164
13:08.900 --> 13:13.670
it will automatically be added under our "input dialog" activity in our sequence.

165
13:14.780 --> 13:21.260
The message box activity is an activity that will show a message box on screen when the robot is run

166
13:21.500 --> 13:23.980
containing whatever message we put in it.

167
13:24.680 --> 13:26.930
So let us write our message.

168
13:26.930 --> 13:33.740
First we write the name of our variable, which is "name", and you will see that UiPath will suggest our

169
13:33.740 --> 13:34.360
variable,

170
13:34.360 --> 13:35.870
so we just double-click it.

171
13:36.650 --> 13:43.260
Then we write +", you are awesome!

172
13:43.520 --> 13:45.650
Welcome to UiPath :)"

173
13:48.160 --> 13:55.450
So this is our process, and if you run it right now using "run file" or CTRL+F6, you

174
13:55.450 --> 14:00.870
should first get the input dialog on screen and here you can write your name,

175
14:00.880 --> 14:04.590
I will write my full name, which is "Tor-Inge" and press OK,

176
14:04.600 --> 14:12.020
and what shows next is our message box. "Tor-Inge, you are awesome! Welcome to UiPath :)"

177
14:12.430 --> 14:13.200
And that's it.

178
14:13.990 --> 14:19.960
If I run it again and I write another name, for instance, my friend David's name, the variable will

179
14:19.960 --> 14:23.280
contain the value "David" and the message box will show:

180
14:23.710 --> 14:25.140
"David, you're awesome!

181
14:25.270 --> 14:26.460
Welcome to UiPath :)"

182
14:28.900 --> 14:35.830
Before we end this lesson, I will just show you a little trick, because as you see now, by default,

183
14:35.830 --> 14:38.580
robot projects are set to run in debug mode.

184
14:39.400 --> 14:41.740
I prefer to have "run file" as default,

185
14:41.740 --> 14:52.630
and to handle this, I go to "home" >> to "settings" >> to "design", and I change the setting to "run file".

186
14:56.460 --> 15:01.710
If you experienced any trouble following this lesson, I've added the UiPath project file to this courses

187
15:01.710 --> 15:03.540
downloadable resources.